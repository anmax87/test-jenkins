environment {
    registry = "anmaxx/jenkins-maven"
    registryCredential = 'dockerhub'
    dockerImage = ''
    }
  node('AgentDocker') {
    tool name: 'apache-maven', type: 'maven'
 
      stage('Checkout external proj') {
        git (branch: 'master',
        credentialsId: 'git',
        url: 'git@github.com:jenkins-docs/simple-java-maven-app.git')

          sh "ls -lat"
        }
        
      stage('Build') {
        withEnv(["PATH=${env.PATH}:${tool 'apache-maven'}/bin"]){
            sh 'mvn -B -DskipTests clean package'
      }
    }
      stage('Test') {
        withEnv(["PATH=${env.PATH}:${tool 'apache-maven'}/bin"]){
            sh 'mvn test'
            stash includes: 'target/my-app-1.0-SNAPSHOT.jar', name: 'artifactStash'
        }
          
    }
  }
  node('AgentDocker') {
      tool name: 'docker-latest', type: 'org.jenkinsci.plugins.docker.commons.tools.DockerTool'
    stage('Ckeck prerequest'){
        echo "${tool 'docker-latest'}"
        sh "ls -lah"
        withEnv(["PATH=${env.PATH}:${tool 'docker-latest'}/bin"]){
        sh "docker -v"
      }
    }
    stage('unstash our application'){
        unstash 'artifactStash'
        sh 'ls -lah'
        withEnv(["PATH=${env.PATH}:${tool 'docker-latest'}/bin"]){
            sh 'docker ps -a'
        } 
    }
    
//    stage('Deliver') {
//            steps {
//                sh './jenkins/scripts/deliver.sh'
//            }
//        }
//    stage('Building image') {
//      steps{
//        script {
//          dockerImage = docker.build registry + ":$BUILD_NUMBER"
//            }
//        }
//    }
//    stage('Deploy Image') {
//      steps{
//         script {
//            docker.withRegistry( '', registryCredential ) {
//            dockerImage.push()
//          }
//        }
//      }
//    }
//    stage('Remove Unused docker image') {
//      steps{
//        sh "docker rmi $registry:$BUILD_NUMBER"
//      }
//    }
  
  }


